name: Monorepo pipeline

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches: [master]

jobs:
  check-code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get global yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Pulling cache for global Yarn modules cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Pulling cache for Node.js modules
        uses: actions/cache@v1
        id: node-modules-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Installing dependencies
        run: yarn

      # - name: Auditing Node.js modules
      #   run: yarn run security:audit

      - name: Linting code
        run: yarn run affected:lint --base origin/master --parallel

      - name: Check formatting of code
        run: yarn run format:check --base origin/master --parallel

      - name: Run tests
        run: yarn run affected:test --base origin/master --parallel

      # - name: Running E2E tests
      #   run: yarn run affected:e2e --base origin/master

      - name: Prepare environment to run docker
        id: docker_env
        run: |
          export GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF/refs\/heads\//}}
          export DOCKER_BRANCH_TAG=$(echo ${GIT_BRANCH} | tr "/." "-" )
          export DOCKER_TAG=${GITHUB_RUN_NUMBER}_${DOCKER_BRANCH_TAG}_${GITHUB_SHA:0:7}
          echo "Docker tag will be ${DOCKER_TAG}"
          echo "::set-env name=BUILD_ARGS::GIT_SHA=${GITHUB_SHA},GIT_BRANCH=${GIT_BRANCH}"
          echo "::set-env name=DOCKER_TAGS::${DOCKER_TAG},latest_${DOCKER_BRANCH_TAG}"
          echo "::set-env name=DOCKER_REG::553296336529.dkr.ecr.eu-west-1.amazonaws.com"
          echo "::set-env name=DOCKER_REG_USER::AWS"
          echo "::set-env name=DOCKER_REG_PASSWORD::$(aws ecr get-login-password --region eu-west-1)"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push docker
        run: yarn run affected:docker --base origin/master --parallel
