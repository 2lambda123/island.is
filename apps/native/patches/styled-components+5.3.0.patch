diff --git a/node_modules/styled-components/native/dist/styled-components.native.cjs.js b/node_modules/styled-components/native/dist/styled-components.native.cjs.js
index a1baee3..32636cb 100644
--- a/node_modules/styled-components/native/dist/styled-components.native.cjs.js
+++ b/node_modules/styled-components/native/dist/styled-components.native.cjs.js
@@ -29,6 +29,41 @@ var getAlphabeticChar = function getAlphabeticChar(code) {
 };
 /* input a number, usually a hash and convert it to base-52 */
 
+function mapReactNativeStyles(styles) {
+  var colorPropNames = [
+    'backgroundColor',
+    'borderBottomColor',
+    'borderColor',
+    'borderLeftColor',
+    'borderRightColor',
+    'borderTopColor',
+    'borderStartColor',
+    'borderEndColor',
+    'color',
+    'shadowColor',
+    'textDecorationColor',
+    'tintColor',
+    'textShadowColor',
+    'overlayColor',
+  ]
+  for (var i = 0; i < colorPropNames.length; i++) {
+    var val = styles[colorPropNames[i]];
+    // starts with a string
+    if (val && val[0] === "'") {
+      try {
+        const obj = JSON.parse(val.substr(1, val.length - 2))
+        if (obj.dynamic) {
+          styles[colorPropNames[i]] = reactNative.DynamicColorIOS(obj.dynamic);
+        } else if (obj.semantic) {
+          styles[colorPropNames[i]] = reactNative.PlatformColor(obj.semantic);
+        }
+      } catch (err) {
+        // noop
+      }
+    }
+  }
+  return styles;
+}
 
 function generateAlphabeticName(code) {
   var name = '';
@@ -5780,6 +5815,7 @@ var _InlineStyle = (function (styleSheet) {
         // https://github.com/styled-components/css-to-react-native/issues/11
 
         var styleObject = transformDeclPairs(declPairs, ['borderRadius', 'borderWidth', 'borderColor', 'borderStyle']);
+        mapReactNativeStyles(styleObject);
         var styles = styleSheet.create({
           generated: styleObject
         });
