#####################################################################
#
# Do not edit this file manually, it is automatically generated.
# Run "yarn charts" instead.
#
#####################################################################
namespaces:
  namespaces:
    - 'identity-server'
    - 'identity-server-admin'
    - 'identity-server-delegation'
    - 'personal-representative'
identity-server:
  metadata:
    name: 'identity-server'
    namespace: 'identity-server'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'identity-server'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/identity-server'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'identity-server'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/identity-server'
        annotations:
          ad.datadoghq.com/identity-server.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'identity-server'
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          fsGroup: 65534
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/identity-server'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
            port: 5010
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/readiness'
            port: 5010
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          FeatureFlags__ConfigCatSdkKey:
            valueFrom:
              secretKeyRef:
                name: 'FeatureFlags__ConfigCatSdkKey'
                key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
        resources:
          limits:
            cpu: '4000m'
            memory: '2048Mi'
          requests:
            cpu: '1000m'
            memory: '1024Mi'
        volumeMounts:
          - name: 'ids-signing.pfx'
            mountPath: '/etc/config/ids-signing.pfx'
      serviceAccountName: 'identity-server'
auth-admin-web:
  metadata:
    name: 'auth-admin-web'
    namespace: 'identity-server-admin'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'auth-admin-web'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/auth-admin-web'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'auth-admin-web'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/auth-admin-web'
        annotations:
          ad.datadoghq.com/auth-admin-web.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'auth-admin-web'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/auth-admin-web'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          IDENTITYSERVER_SECRET:
            valueFrom:
              secretKeyRef:
                name: 'IDENTITYSERVER_SECRET'
                key: '/k8s/auth-admin-web/IDENTITYSERVER_SECRET'
        resources:
          limits:
            cpu: '400m'
            memory: '256Mi'
          requests:
            cpu: '200m'
            memory: '128Mi'
services-auth-admin-api:
  metadata:
    name: 'services-auth-admin-api'
    namespace: 'identity-server-admin'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'services-auth-admin-api'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-admin-api'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'services-auth-admin-api'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-admin-api'
        annotations:
          ad.datadoghq.com/services-auth-admin-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'services-auth-admin-api'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-admin-api'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          CONFIGCAT_SDK_KEY:
            valueFrom:
              secretKeyRef:
                name: 'CONFIGCAT_SDK_KEY'
                key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
        resources:
          limits:
            cpu: '400m'
            memory: '256Mi'
          requests:
            cpu: '100m'
            memory: '128Mi'
services-auth-ids-api:
  metadata:
    name: 'services-auth-ids-api'
    namespace: 'identity-server'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'services-auth-ids-api'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-ids-api'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'services-auth-ids-api'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-ids-api'
        annotations:
          ad.datadoghq.com/services-auth-ids-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'services-auth-ids-api'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-ids-api'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          RSK_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: 'RSK_PASSWORD'
                key: '/k8s/xroad/client/RSK/PASSWORD'
        resources:
          limits:
            cpu: '800m'
            memory: '512Mi'
          requests:
            cpu: '100m'
            memory: '256Mi'
      initContainers:
        - args:
            - 'sequelize-cli'
            - 'db:migrate'
          command:
            - 'npx'
          name: 'migrations'
          image: ''
          env: {}
        - args:
            - 'sequelize-cli'
            - 'db:seed:all'
          command:
            - 'npx'
          name: 'seed'
          image: ''
          env: {}
services-auth-public-api:
  metadata:
    name: 'services-auth-public-api'
    namespace: 'identity-server-admin'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'services-auth-public-api'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-public-api'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'services-auth-public-api'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-public-api'
        annotations:
          ad.datadoghq.com/services-auth-public-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'services-auth-public-api'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-public-api'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          RSK_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: 'RSK_PASSWORD'
                key: '/k8s/xroad/client/RSK/PASSWORD'
        resources:
          limits:
            cpu: '400m'
            memory: '256Mi'
          requests:
            cpu: '100m'
            memory: '128Mi'
services-auth-delegation-api:
  metadata:
    name: 'services-auth-delegation-api'
    namespace: 'identity-server-delegation'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'services-auth-delegation-api'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-delegation-api'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'services-auth-delegation-api'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-delegation-api'
        annotations:
          ad.datadoghq.com/services-auth-delegation-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'services-auth-delegation-api'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-delegation-api'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          RSK_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: 'RSK_PASSWORD'
                key: '/k8s/xroad/client/RSK/PASSWORD'
        resources:
          limits:
            cpu: '400m'
            memory: '256Mi'
          requests:
            cpu: '100m'
            memory: '128Mi'
services-auth-personal-representative:
  metadata:
    name: 'services-auth-personal-representative'
    namespace: 'personal-representative'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'services-auth-personal-representative'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-personal-representative'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'services-auth-personal-representative'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-personal-representative'
        annotations:
          ad.datadoghq.com/services-auth-personal-representative.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'services-auth-personal-representative'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-personal-representative'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          CONFIGCAT_SDK_KEY:
            valueFrom:
              secretKeyRef:
                name: 'CONFIGCAT_SDK_KEY'
                key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
        resources:
          limits:
            cpu: '400m'
            memory: '256Mi'
          requests:
            cpu: '100m'
            memory: '128Mi'
services-auth-personal-representative-public:
  metadata:
    name: 'services-auth-personal-representative-public'
    namespace: 'personal-representative'
  labels:
    tags.datadoghq.com/env: 'prod'
    tags.datadoghq.com/service: 'services-auth-personal-representative-public'
    tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-personal-representative-public'
  spec:
    strategy:
      type: 'RollingUpdate'
      rollingUpdate:
        maxSurge: '25%'
        maxUnavailable: '25%'
    template:
      metadata:
        labels:
          tags.datadoghq.com/env: 'prod'
          tags.datadoghq.com/service: 'services-auth-personal-representative-public'
          tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-personal-representative-public'
        annotations:
          ad.datadoghq.com/services-auth-personal-representative-public.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
    spec:
      containers:
        name: 'services-auth-personal-representative-public'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-auth-personal-representative-public'
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: '/liveness'
          initialDelaySeconds: 3
          timeoutSeconds: 3
        env:
          CONFIGCAT_SDK_KEY:
            valueFrom:
              secretKeyRef:
                name: 'CONFIGCAT_SDK_KEY'
                key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
        resources:
          limits:
            cpu: '400m'
            memory: '256Mi'
          requests:
            cpu: '100m'
            memory: '128Mi'
