#####################################################################
#
# Do not edit this file manually, it is automatically generated.
# Run "yarn charts" instead.
#
#####################################################################
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'application-system-api'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-api'
metadata:
  name: 'application-system-api'
  namespace: 'application-system'
spec:
  spec:
    containers:
      args:
        - 'main.js'
      command:
        - 'node'
      env:
        - name: 'EMAIL_REGION'
          value: 'eu-west-1'
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'XROAD_CHARGE_FJS_V2_TIMEOUT'
          value: '20000'
        - name: 'REDIS_URL_NODE_01'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'CONTENTFUL_HOST'
          value: 'preview.contentful.com'
        - name: 'CLIENT_LOCATION_ORIGIN'
          value: 'https://beta.dev01.devland.is/umsoknir'
        - name: 'APPLICATION_ATTACHMENT_BUCKET'
          value: 'island-is-dev-storage-application-system'
        - name: 'FILE_STORAGE_UPLOAD_BUCKET'
          value: 'island-is-dev-upload-api'
        - name: 'FILE_SERVICE_PRESIGN_BUCKET'
          value: 'island-is-dev-fs-presign-bucket'
        - name: 'GRAPHQL_API_URL'
          value: 'http://web-api.islandis.svc.cluster.local'
        - name: 'INSTITUTION_APPLICATION_RECIPIENT_EMAIL_ADDRESS'
          value: 'gunnar.ingi@fjr.is'
        - name: 'INSTITUTION_APPLICATION_RECIPIENT_NAME'
          value: 'Gunnar Ingi'
        - name: 'IDENTITY_SERVER_CLIENT_ID'
          value: '@island.is/clients/application-system'
        - name: 'FUNDING_GOVERNMENT_PROJECTS_APPLICATION_RECIPIENT_EMAIL_ADDRESS'
          value: 'gunnar.ingi@fjr.is'
        - name: 'FUNDING_GOVERNMENT_PROJECTS_APPLICATION_RECIPIENT_NAME'
          value: 'Gunnar Ingi'
        - name: 'LOGIN_SERVICE_APPLICATION_RECIPIENT_EMAIL_ADDRESS'
          value: 'gunnar.ingi@fjr.is'
        - name: 'LOGIN_SERVICE_APPLICATION_RECIPIENT_NAME'
          value: 'Gunnar Ingi'
        - name: 'NOVA_USERNAME'
          value: 'IslandIs_User_Development'
        - name: 'FINANCIAL_STATEMENTS_INAO_BASE_PATH'
          value: 'https://dev-re.crm4.dynamics.com/api/data/v9.1'
        - name: 'FINANCIAL_STATEMENTS_INAO_ISSUER'
          value: 'https://login.microsoftonline.com/05a20268-aaea-4bb5-bb78-960b0462185e/v2.0'
        - name: 'FINANCIAL_STATEMENTS_INAO_SCOPE'
          value: 'https://dev-re.crm4.dynamics.com/.default'
        - name: 'FINANCIAL_STATEMENTS_INAO_TOKEN_ENDPOINT'
          value: 'https://login.microsoftonline.com/05a20268-aaea-4bb5-bb78-960b0462185e/oauth2/v2.0/token'
        - name: 'SERVICE_DOCUMENTS_BASEPATH'
          value: 'http://web-services-documents.services-documents.svc.cluster.local'
        - name: 'ENDORSEMENTS_API_BASE_PATH'
          value: 'http://web-endorsement-system-api.endorsement-system.svc.cluster.local'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'XROAD_BASE_PATH'
          value: 'http://securityserver.dev01.devland.is'
        - name: 'XROAD_BASE_PATH_WITH_ENV'
          value: 'http://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_TLS_BASE_PATH'
          value: 'https://securityserver.dev01.devland.is'
        - name: 'XROAD_TLS_BASE_PATH_WITH_ENV'
          value: 'https://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_CLIENT_ID'
          value: 'IS-DEV/GOV/10000/island-is-client'
        - name: 'XROAD_VMST_API_PATH'
          value: '/VMST-ParentalLeave-Protected/ParentalLeaveApplication-v1'
        - name: 'XROAD_VMST_MEMBER_CODE'
          value: '10003'
        - name: 'XROAD_HEALTH_INSURANCE_WSDLURL'
          value: 'https://test-huld.sjukra.is/islandrg?wsdl'
        - name: 'XROAD_HEALTH_INSURANCE_ID'
          value: 'IS-DEV/GOV/10007/SJUKRA-Protected'
        - name: 'XROAD_NATIONAL_REGISTRY_SERVICE_PATH'
          value: 'IS-DEV/GOV/10001/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_NATIONAL_REGISTRY_REDIS_NODES'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'XROAD_TJODSKRA_API_PATH'
          value: '/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_TJODSKRA_MEMBER_CODE'
          value: '10001'
        - name: 'XROAD_PAYMENT_PROVIDER_ID'
          value: 'IS-DEV/GOV/10021/FJS-Public'
        - name: 'XROAD_PAYMENT_BASE_CALLBACK_URL'
          value: 'XROAD:/IS-DEV/GOV/10000/island-is/application-payment-v1/'
        - name: 'XROAD_PAYMENT_ADDITION_CALLBACK_URL'
          value: '/'
        - name: 'XROAD_DRIVING_LICENSE_PATH'
          value: 'r1/IS-DEV/GOV/10005/Logreglan-Protected/RafraentOkuskirteini-v1'
        - name: 'XROAD_DRIVING_LICENSE_V2_PATH'
          value: 'r1/IS-DEV/GOV/10005/Logreglan-Protected/RafraentOkuskirteini-v2'
        - name: 'XROAD_PAYMENT_SCHEDULE_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/paymentSchedule_v1'
        - name: 'XROAD_CRIMINAL_RECORD_PATH'
          value: 'r1/IS-DEV/GOV/10005/Logreglan-Protected/Sakavottord-PDF-v2'
        - name: 'DATA_PROTECTION_COMPLAINT_XROAD_PROVIDER_ID'
          value: 'IS-DEV/GOV/10026/gopro/kvortun-v1'
        - name: 'FISHING_LICENSE_XROAD_PROVIDER_ID'
          value: 'IS-DEV/GOV/10012/Fiskistofa-Protected/veidileyfi-v1'
        - name: 'XROAD_FINANCIAL_AID_BACKEND_PATH'
          value: 'IS-DEV/MUN/10023/samband-sveitarfelaga/financial-aid-backend'
        - name: 'XROAD_CHARGE_FJS_V2_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/chargeFJS_v2'
        - name: 'XROAD_FINANCES_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/financeIsland'
        - name: 'XROAD_PROPERTIES_SERVICE_V2_PATH'
          value: 'IS-DEV/GOV/10033/HMS-Protected/Fasteignir-v1'
        - name: 'COMPANY_REGISTRY_XROAD_PROVIDER_ID'
          value: 'IS-DEV/GOV/10006/Skatturinn/ft-v1'
        - name: 'COMPANY_REGISTRY_REDIS_NODES'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'XROAD_VEHICLE_SERVICE_FJS_V1_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/VehicleServiceFJS_v1'
        - name: 'XROAD_VEHICLE_CODETABLES_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Codetables-V1'
        - name: 'XROAD_VEHICLE_INFOLOCKS_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Infolocks-V1'
        - name: 'XROAD_VEHICLE_OPERATORS_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Operators-V3'
        - name: 'XROAD_VEHICLE_OWNER_CHANGE_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Ownerchange-V2'
        - name: 'XROAD_VEHICLE_PLATE_ORDERING_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-PlateOrdering-V1'
        - name: 'XROAD_VEHICLE_PRINTING_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Printing-V1'
        - name: 'XROAD_DIGITAL_TACHOGRAPH_DRIVERS_CARD_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Okuritar-V1'
        - name: 'XROAD_VEHICLES_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Mitt-Svaedi-V1'
        - name: 'XROAD_PASSPORT_LICENSE_PATH'
          value: 'IS-DEV/GOV/10001/SKRA-Protected/Forskraning-V1'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'NOVA_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/NOVA_URL'
              name: 'NOVA_URL'
        - name: 'DOKOBIT_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DOKOBIT_URL'
              name: 'DOKOBIT_URL'
        - name: 'SYSLUMENN_HOST'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/SYSLUMENN_HOST'
              name: 'SYSLUMENN_HOST'
        - name: 'CONTENTFUL_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/CONTENTFUL_ACCESS_TOKEN'
              name: 'CONTENTFUL_ACCESS_TOKEN'
        - name: 'AUTH_JWT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/AUTH_JWT_SECRET'
              name: 'AUTH_JWT_SECRET'
        - name: 'DOKOBIT_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/DOKOBIT_ACCESS_TOKEN'
              name: 'DOKOBIT_ACCESS_TOKEN'
        - name: 'EMAIL_FROM'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/EMAIL_FROM'
              name: 'EMAIL_FROM'
        - name: 'EMAIL_FROM_NAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/EMAIL_FROM_NAME'
              name: 'EMAIL_FROM_NAME'
        - name: 'EMAIL_REPLY_TO'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/EMAIL_REPLY_TO'
              name: 'EMAIL_REPLY_TO'
        - name: 'EMAIL_REPLY_TO_NAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/EMAIL_REPLY_TO_NAME'
              name: 'EMAIL_REPLY_TO_NAME'
        - name: 'IDENTITY_SERVER_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/IDENTITY_SERVER_CLIENT_SECRET'
              name: 'IDENTITY_SERVER_CLIENT_SECRET'
        - name: 'DOCUMENT_PROVIDER_ONBOARDING_REVIEWER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/DOCUMENT_PROVIDER_ONBOARDING_REVIEWER'
              name: 'DOCUMENT_PROVIDER_ONBOARDING_REVIEWER'
        - name: 'SYSLUMENN_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/SYSLUMENN_USERNAME'
              name: 'SYSLUMENN_USERNAME'
        - name: 'SYSLUMENN_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/SYSLUMENN_PASSWORD'
              name: 'SYSLUMENN_PASSWORD'
        - name: 'DRIVING_LICENSE_BOOK_XROAD_PATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DRIVING_LICENSE_BOOK_XROAD_PATH'
              name: 'DRIVING_LICENSE_BOOK_XROAD_PATH'
        - name: 'DRIVING_LICENSE_BOOK_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DRIVING_LICENSE_BOOK_USERNAME'
              name: 'DRIVING_LICENSE_BOOK_USERNAME'
        - name: 'DRIVING_LICENSE_BOOK_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DRIVING_LICENSE_BOOK_PASSWORD'
              name: 'DRIVING_LICENSE_BOOK_PASSWORD'
        - name: 'NOVA_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/NOVA_PASSWORD'
              name: 'NOVA_PASSWORD'
        - name: 'ARK_BASE_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/ARK_BASE_URL'
              name: 'ARK_BASE_URL'
        - name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FINANCIAL_STATEMENTS_INAO_CLIENT_ID'
              name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_ID'
        - name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FINANCIAL_STATEMENTS_INAO_CLIENT_SECRET'
              name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_SECRET'
        - name: 'ISLYKILL_SERVICE_PASSPHRASE'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/ISLYKILL_SERVICE_PASSPHRASE'
              name: 'ISLYKILL_SERVICE_PASSPHRASE'
        - name: 'ISLYKILL_SERVICE_BASEPATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/ISLYKILL_SERVICE_BASEPATH'
              name: 'ISLYKILL_SERVICE_BASEPATH'
        - name: 'VMST_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/VMST_ID'
              name: 'VMST_ID'
        - name: 'XROAD_VMST_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/vmst-client/VMST_API_KEY'
              name: 'XROAD_VMST_API_KEY'
        - name: 'XROAD_HEALTH_INSURANCE_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/health-insurance/XROAD-USER'
              name: 'XROAD_HEALTH_INSURANCE_USERNAME'
        - name: 'XROAD_HEALTH_INSURANCE_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/health-insurance/XROAD-PASSWORD'
              name: 'XROAD_HEALTH_INSURANCE_PASSWORD'
        - name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/HEALTH_INSURANCE_V2_XROAD_USERNAME'
              name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_USERNAME'
        - name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/HEALTH_INSURANCE_V2_XROAD_PASSWORD'
              name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_PASSWORD'
        - name: 'XROAD_PAYMENT_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/PAYMENT_USER'
              name: 'XROAD_PAYMENT_USER'
        - name: 'XROAD_PAYMENT_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/PAYMENT_PASSWORD'
              name: 'XROAD_PAYMENT_PASSWORD'
        - name: 'XROAD_DRIVING_LICENSE_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DRIVING_LICENSE_SECRET'
              name: 'XROAD_DRIVING_LICENSE_SECRET'
        - name: 'DATA_PROTECTION_COMPLAINT_API_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/xroad/client/DATA_PROTECTION_COMPLAINT_API_USERNAME'
              name: 'DATA_PROTECTION_COMPLAINT_API_USERNAME'
        - name: 'DATA_PROTECTION_COMPLAINT_API_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/xroad/client/DATA_PROTECTION_COMPLAINT_API_PASSWORD'
              name: 'DATA_PROTECTION_COMPLAINT_API_PASSWORD'
        - name: 'XROAD_PROPERTIES_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/xroad/client/NATIONAL-REGISTRY/IDENTITYSERVER_SECRET'
              name: 'XROAD_PROPERTIES_CLIENT_SECRET'
        - name: 'DB_USER'
          value: 'application_system_api'
        - name: 'DB_NAME'
          value: 'application_system_api'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-api'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'application-system-api'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '1024Mi'
        requests:
          cpu: '100m'
          memory: '512Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
      volumeMounts:
        - mountPath: '/etc/config/islyklar.p12'
          name: 'islyklar.p12'
    initContainers:
      - args:
          - 'sequelize-cli'
          - 'db:migrate'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'application_system_api'
          - name: 'DB_NAME'
            value: 'application_system_api'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/application-system/api/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
    replicas: 10
    serviceAccountName: 'application-system-api'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/application-system-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'application-system-api'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-api'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'application-system-form'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-form'
metadata:
  name: 'application-system-form'
  namespace: 'application-system'
spec:
  spec:
    containers:
      env:
        - name: 'BASEPATH'
          value: '/umsoknir'
        - name: 'SI_PUBLIC_GRAPHQL_PATH'
          value: ''
        - name: 'SI_PUBLIC_IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'SI_PUBLIC_ENVIRONMENT'
          value: 'dev'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'SI_PUBLIC_CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'SI_PUBLIC_CONFIGCAT_SDK_KEY'
        - name: 'SI_PUBLIC_DD_RUM_APPLICATION_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_APPLICATION_ID'
              name: 'SI_PUBLIC_DD_RUM_APPLICATION_ID'
        - name: 'SI_PUBLIC_DD_RUM_CLIENT_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_CLIENT_TOKEN'
              name: 'SI_PUBLIC_DD_RUM_CLIENT_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-form'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'application-system-form'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/application-system-form.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'application-system-form'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-form'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'service-portal'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/service-portal'
metadata:
  name: 'service-portal'
  namespace: 'service-portal'
spec:
  spec:
    containers:
      env:
        - name: 'BASEPATH'
          value: '/minarsidur'
        - name: 'SI_PUBLIC_IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'SI_PUBLIC_ENVIRONMENT'
          value: 'dev'
        - name: 'SI_PUBLIC_GRAPHQL_API'
          value: '/api/graphql'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'SI_PUBLIC_CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'SI_PUBLIC_CONFIGCAT_SDK_KEY'
        - name: 'SI_PUBLIC_DD_RUM_APPLICATION_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_APPLICATION_ID'
              name: 'SI_PUBLIC_DD_RUM_APPLICATION_ID'
        - name: 'SI_PUBLIC_DD_RUM_CLIENT_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_CLIENT_TOKEN'
              name: 'SI_PUBLIC_DD_RUM_CLIENT_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/service-portal'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'service-portal'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '200m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    replicas: 5
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/service-portal.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'service-portal'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/service-portal'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'service-portal-api'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-profile'
metadata:
  name: 'service-portal-api'
  namespace: 'service-portal'
spec:
  spec:
    containers:
      env:
        - name: 'SERVICE_PORTAL_BASE_URL'
          value: 'https://beta.dev01.devland.is/minarsidur'
        - name: 'EMAIL_REGION'
          value: 'eu-west-1'
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'NOVA_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal-api/NOVA_URL'
              name: 'NOVA_URL'
        - name: 'NOVA_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/gjafakort/NOVA_PASSWORD'
              name: 'NOVA_PASSWORD'
        - name: 'NOVA_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/gjafakort/NOVA_USERNAME'
              name: 'NOVA_USERNAME'
        - name: 'EMAIL_FROM'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/api/EMAIL_FROM'
              name: 'EMAIL_FROM'
        - name: 'EMAIL_FROM_NAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/api/EMAIL_FROM_NAME'
              name: 'EMAIL_FROM_NAME'
        - name: 'EMAIL_REPLY_TO'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/api/EMAIL_REPLY_TO'
              name: 'EMAIL_REPLY_TO'
        - name: 'EMAIL_REPLY_TO_NAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/api/EMAIL_REPLY_TO_NAME'
              name: 'EMAIL_REPLY_TO_NAME'
        - name: 'DB_USER'
          value: 'service_portal_api'
        - name: 'DB_NAME'
          value: 'service_portal_api'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/api/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-profile'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'service-portal-api'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '800m'
          memory: '1024Mi'
        requests:
          cpu: '400m'
          memory: '512Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    initContainers:
      - args:
          - 'sequelize-cli'
          - 'db:migrate'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'service_portal_api'
          - name: 'DB_NAME'
            value: 'service_portal_api'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/service-portal/api/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
    replicas: 2
    serviceAccountName: 'service-portal-api'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/service-portal-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'service-portal-api'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-profile'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'portals-admin'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/portals-admin'
metadata:
  name: 'portals-admin'
  namespace: 'portals-admin'
spec:
  spec:
    containers:
      env:
        - name: 'BASEPATH'
          value: '/stjornbord'
        - name: 'SI_PUBLIC_IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'SI_PUBLIC_ENVIRONMENT'
          value: 'dev'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'SI_PUBLIC_CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'SI_PUBLIC_CONFIGCAT_SDK_KEY'
        - name: 'SI_PUBLIC_DD_RUM_APPLICATION_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_APPLICATION_ID'
              name: 'SI_PUBLIC_DD_RUM_APPLICATION_ID'
        - name: 'SI_PUBLIC_DD_RUM_CLIENT_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_CLIENT_TOKEN'
              name: 'SI_PUBLIC_DD_RUM_CLIENT_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/portals-admin'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'portals-admin'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '200m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    replicas: 5
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/portals-admin.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'portals-admin'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/portals-admin'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'samradsgatt'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/samradsgatt'
metadata:
  name: 'samradsgatt'
  namespace: 'samradsgatt'
spec:
  spec:
    containers:
      env:
        - name: 'BASEPATH'
          value: '/samradsgatt'
        - name: 'ENVIRONMENT'
          value: 'dev'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'DD_RUM_APPLICATION_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_APPLICATION_ID'
              name: 'DD_RUM_APPLICATION_ID'
        - name: 'DD_RUM_CLIENT_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_CLIENT_TOKEN'
              name: 'DD_RUM_CLIENT_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/samradsgatt'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'samradsgatt'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '200m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    replicas: 5
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/samradsgatt.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'samradsgatt'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/samradsgatt'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'api'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/api'
metadata:
  name: 'api'
  namespace: 'islandis'
spec:
  spec:
    containers:
      args:
        - '--tls-min-v1.0'
        - '--no-experimental-fetch'
        - 'main.js'
      command:
        - 'node'
      env:
        - name: 'APPLICATION_SYSTEM_API_URL'
          value: 'http://web-application-system-api.application-system.svc.cluster.local'
        - name: 'ICELANDIC_NAMES_REGISTRY_BACKEND_URL'
          value: 'http://web-icelandic-names-registry-backend.icelandic-names-registry.svc.cluster.local'
        - name: 'AIR_DISCOUNT_SCHEME_BACKEND_URL'
          value: 'http://web-air-discount-scheme-backend.air-discount-scheme.svc.cluster.local'
        - name: 'AIR_DISCOUNT_SCHEME_FRONTEND_HOSTNAME'
          value: 'loftbru.dev01.devland.is'
        - name: 'FILE_STORAGE_UPLOAD_BUCKET'
          value: 'island-is-dev-upload-api'
        - name: 'AUTH_PUBLIC_API_URL'
          value: 'https://identity-server.dev01.devland.is/api'
        - name: 'ELASTIC_NODE'
          value: 'https://vpc-search-njkekqydiegezhr4vqpkfnw5la.eu-west-1.es.amazonaws.com'
        - name: 'CONTENTFUL_HOST'
          value: 'preview.contentful.com'
        - name: 'CONTACT_US_EMAIL'
          value: 's@kogk.is'
        - name: 'ZENDESK_CONTACT_FORM_SUBDOMAIN'
          value: 'stjanilofts'
        - name: 'TELL_US_A_STORY_EMAIL'
          value: 's@kogk.is'
        - name: 'SEND_FROM_EMAIL'
          value: 'development@island.is'
        - name: 'SERVICE_USER_PROFILE_URL'
          value: 'http://web-service-portal-api.service-portal.svc.cluster.local'
        - name: 'FILE_DOWNLOAD_BUCKET'
          value: 'island-is-dev-download-cache-api'
        - name: 'SERVICE_DOCUMENTS_BASEPATH'
          value: 'http://web-services-documents.services-documents.svc.cluster.local'
        - name: 'DOWNLOAD_SERVICE_BASE_PATH'
          value: 'https://api.dev01.devland.is'
        - name: 'ENDORSEMENT_SYSTEM_BASE_API_URL'
          value: 'http://web-endorsement-system-api.endorsement-system.svc.cluster.local'
        - name: 'IDENTITY_SERVER_CLIENT_ID'
          value: '@island.is/clients/api'
        - name: 'AIR_DISCOUNT_SCHEME_CLIENT_TIMEOUT'
          value: '20000'
        - name: 'XROAD_NATIONAL_REGISTRY_TIMEOUT'
          value: '20000'
        - name: 'XROAD_PROPERTIES_TIMEOUT'
          value: '20000'
        - name: 'SYSLUMENN_TIMEOUT'
          value: '40000'
        - name: 'XROAD_DRIVING_LICENSE_BOOK_TIMEOUT'
          value: '20000'
        - name: 'XROAD_FINANCES_TIMEOUT'
          value: '20000'
        - name: 'XROAD_CHARGE_FJS_V2_TIMEOUT'
          value: '20000'
        - name: 'AUTH_DELEGATION_API_URL'
          value: 'http://web-services-auth-delegation-api.identity-server-delegation.svc.cluster.local'
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'MUNICIPALITIES_FINANCIAL_AID_BACKEND_URL'
          value: 'http://web-financial-aid-backend'
        - name: 'FINANCIAL_STATEMENTS_INAO_BASE_PATH'
          value: 'https://dev-re.crm4.dynamics.com/api/data/v9.1'
        - name: 'FINANCIAL_STATEMENTS_INAO_ISSUER'
          value: 'https://login.microsoftonline.com/05a20268-aaea-4bb5-bb78-960b0462185e/v2.0'
        - name: 'FINANCIAL_STATEMENTS_INAO_SCOPE'
          value: 'https://dev-re.crm4.dynamics.com/.default'
        - name: 'FINANCIAL_STATEMENTS_INAO_TOKEN_ENDPOINT'
          value: 'https://login.microsoftonline.com/05a20268-aaea-4bb5-bb78-960b0462185e/oauth2/v2.0/token'
        - name: 'ELECTRONIC_REGISTRATION_STATISTICS_API_URL'
          value: 'https://api-staging.thinglysing.is/business/tolfraedi'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'FISKISTOFA_ZENTER_CLIENT_ID'
          value: '1114'
        - name: 'SOFFIA_SOAP_URL'
          value: 'https://soffiaprufa.skra.is'
        - name: 'XROAD_ADR_MACHINE_LICENSE_PATH'
          value: 'IS-DEV/GOV/10013/Vinnueftirlitid-Protected/rettindi-token-v1'
        - name: 'XROAD_FIREARM_LICENSE_PATH'
          value: 'IS-DEV/GOV/10005/Logreglan-Protected/island-api-v1'
        - name: 'XROAD_DISABILTITY_LICENSE_PATH'
          value: 'IS-DEV/GOV/10008/TR-Protected/oryrki-v1'
        - name: 'XROAD_BASE_PATH'
          value: 'http://securityserver.dev01.devland.is'
        - name: 'XROAD_BASE_PATH_WITH_ENV'
          value: 'http://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_TLS_BASE_PATH'
          value: 'https://securityserver.dev01.devland.is'
        - name: 'XROAD_TLS_BASE_PATH_WITH_ENV'
          value: 'https://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_CLIENT_ID'
          value: 'IS-DEV/GOV/10000/island-is-client'
        - name: 'XROAD_HEALTH_INSURANCE_WSDLURL'
          value: 'https://test-huld.sjukra.is/islandrg?wsdl'
        - name: 'XROAD_HEALTH_INSURANCE_ID'
          value: 'IS-DEV/GOV/10007/SJUKRA-Protected'
        - name: 'XROAD_VMST_API_PATH'
          value: '/VMST-ParentalLeave-Protected/ParentalLeaveApplication-v1'
        - name: 'XROAD_VMST_MEMBER_CODE'
          value: '10003'
        - name: 'XROAD_DRIVING_LICENSE_PATH'
          value: 'r1/IS-DEV/GOV/10005/Logreglan-Protected/RafraentOkuskirteini-v1'
        - name: 'XROAD_DRIVING_LICENSE_V2_PATH'
          value: 'r1/IS-DEV/GOV/10005/Logreglan-Protected/RafraentOkuskirteini-v2'
        - name: 'XROAD_PAYMENT_PROVIDER_ID'
          value: 'IS-DEV/GOV/10021/FJS-Public'
        - name: 'XROAD_PAYMENT_BASE_CALLBACK_URL'
          value: 'XROAD:/IS-DEV/GOV/10000/island-is/application-payment-v1/'
        - name: 'XROAD_PAYMENT_ADDITION_CALLBACK_URL'
          value: '/'
        - name: 'XROAD_FINANCES_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/financeIsland'
        - name: 'XROAD_MMS_LICENSE_SERVICE_ID'
          value: 'IS-DEV/EDU/10020/MMS-Protected/license-api-v1'
        - name: 'XROAD_MMS_GRADE_SERVICE_ID'
          value: 'IS-DEV/EDU/10020/MMS-Protected/grade-api-v1'
        - name: 'XROAD_NATIONAL_REGISTRY_SERVICE_PATH'
          value: 'IS-DEV/GOV/10001/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_NATIONAL_REGISTRY_REDIS_NODES'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'XROAD_TJODSKRA_API_PATH'
          value: '/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_TJODSKRA_MEMBER_CODE'
          value: '10001'
        - name: 'XROAD_PROPERTIES_SERVICE_V2_PATH'
          value: 'IS-DEV/GOV/10033/HMS-Protected/Fasteignir-v1'
        - name: 'XROAD_PAYMENT_SCHEDULE_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/paymentSchedule_v1'
        - name: 'XROAD_CRIMINAL_RECORD_PATH'
          value: 'r1/IS-DEV/GOV/10005/Logreglan-Protected/Sakavottord-PDF-v2'
        - name: 'COMPANY_REGISTRY_XROAD_PROVIDER_ID'
          value: 'IS-DEV/GOV/10006/Skatturinn/ft-v1'
        - name: 'COMPANY_REGISTRY_REDIS_NODES'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'FISHING_LICENSE_XROAD_PROVIDER_ID'
          value: 'IS-DEV/GOV/10012/Fiskistofa-Protected/veidileyfi-v1'
        - name: 'XROAD_FINANCIAL_AID_BACKEND_PATH'
          value: 'IS-DEV/MUN/10023/samband-sveitarfelaga/financial-aid-backend'
        - name: 'XROAD_VEHICLES_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Mitt-Svaedi-V1'
        - name: 'XROAD_PASSPORT_LICENSE_PATH'
          value: 'IS-DEV/GOV/10001/SKRA-Protected/Forskraning-V1'
        - name: 'XROAD_VEHICLE_SERVICE_FJS_V1_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/VehicleServiceFJS_v1'
        - name: 'XROAD_VEHICLE_CODETABLES_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Codetables-V1'
        - name: 'XROAD_VEHICLE_INFOLOCKS_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Infolocks-V1'
        - name: 'XROAD_VEHICLE_OPERATORS_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Operators-V3'
        - name: 'XROAD_VEHICLE_OWNER_CHANGE_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Ownerchange-V2'
        - name: 'XROAD_VEHICLE_PLATE_ORDERING_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-PlateOrdering-V1'
        - name: 'XROAD_VEHICLE_PRINTING_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Vehicle-Printing-V1'
        - name: 'XROAD_DIGITAL_TACHOGRAPH_DRIVERS_CARD_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Okuritar-V1'
        - name: 'XROAD_CHARGE_FJS_V2_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/chargeFJS_v2'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'DOCUMENT_PROVIDER_BASE_PATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DOCUMENT_PROVIDER_BASE_PATH'
              name: 'DOCUMENT_PROVIDER_BASE_PATH'
        - name: 'DOCUMENT_PROVIDER_TOKEN_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DOCUMENT_PROVIDER_TOKEN_URL'
              name: 'DOCUMENT_PROVIDER_TOKEN_URL'
        - name: 'DOCUMENT_PROVIDER_BASE_PATH_TEST'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DOCUMENT_PROVIDER_BASE_PATH_TEST'
              name: 'DOCUMENT_PROVIDER_BASE_PATH_TEST'
        - name: 'DOCUMENT_PROVIDER_TOKEN_URL_TEST'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DOCUMENT_PROVIDER_TOKEN_URL_TEST'
              name: 'DOCUMENT_PROVIDER_TOKEN_URL_TEST'
        - name: 'SYSLUMENN_HOST'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/SYSLUMENN_HOST'
              name: 'SYSLUMENN_HOST'
        - name: 'REGULATIONS_API_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/REGULATIONS_API_URL'
              name: 'REGULATIONS_API_URL'
        - name: 'SOFFIA_HOST_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/SOFFIA_HOST_URL'
              name: 'SOFFIA_HOST_URL'
        - name: 'CONTENTFUL_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/CONTENTFUL_ACCESS_TOKEN'
              name: 'CONTENTFUL_ACCESS_TOKEN'
        - name: 'ZENDESK_CONTACT_FORM_EMAIL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/ZENDESK_CONTACT_FORM_EMAIL'
              name: 'ZENDESK_CONTACT_FORM_EMAIL'
        - name: 'ZENDESK_CONTACT_FORM_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/ZENDESK_CONTACT_FORM_TOKEN'
              name: 'ZENDESK_CONTACT_FORM_TOKEN'
        - name: 'SOFFIA_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/SOFFIA_USER'
              name: 'SOFFIA_USER'
        - name: 'SOFFIA_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/SOFFIA_PASS'
              name: 'SOFFIA_PASS'
        - name: 'POSTHOLF_CLIENTID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_CLIENTID'
              name: 'POSTHOLF_CLIENTID'
        - name: 'POSTHOLF_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_CLIENT_SECRET'
              name: 'POSTHOLF_CLIENT_SECRET'
        - name: 'POSTHOLF_TOKEN_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_TOKEN_URL'
              name: 'POSTHOLF_TOKEN_URL'
        - name: 'POSTHOLF_BASE_PATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_BASE_PATH'
              name: 'POSTHOLF_BASE_PATH'
        - name: 'DOCUMENT_PROVIDER_CLIENTID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documentprovider/DOCUMENT_PROVIDER_CLIENTID'
              name: 'DOCUMENT_PROVIDER_CLIENTID'
        - name: 'DOCUMENT_PROVIDER_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documentprovider/DOCUMENT_PROVIDER_CLIENT_SECRET'
              name: 'DOCUMENT_PROVIDER_CLIENT_SECRET'
        - name: 'DOCUMENT_PROVIDER_CLIENTID_TEST'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documentprovider/DOCUMENT_PROVIDER_CLIENTID_TEST'
              name: 'DOCUMENT_PROVIDER_CLIENTID_TEST'
        - name: 'DOCUMENT_PROVIDER_CLIENT_SECRET_TEST'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documentprovider/DOCUMENT_PROVIDER_CLIENT_SECRET_TEST'
              name: 'DOCUMENT_PROVIDER_CLIENT_SECRET_TEST'
        - name: 'SYSLUMENN_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/SYSLUMENN_USERNAME'
              name: 'SYSLUMENN_USERNAME'
        - name: 'SYSLUMENN_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/SYSLUMENN_PASSWORD'
              name: 'SYSLUMENN_PASSWORD'
        - name: 'DOCUMENT_PROVIDER_ADMINS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documentprovider/DOCUMENT_PROVIDER_ADMINS'
              name: 'DOCUMENT_PROVIDER_ADMINS'
        - name: 'PKPASS_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/PKPASS_API_KEY'
              name: 'PKPASS_API_KEY'
        - name: 'PKPASS_API_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/PKPASS_API_URL'
              name: 'PKPASS_API_URL'
        - name: 'PKPASS_AUTH_RETRIES'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/PKPASS_AUTH_RETRIES'
              name: 'PKPASS_AUTH_RETRIES'
        - name: 'PKPASS_CACHE_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/PKPASS_CACHE_KEY'
              name: 'PKPASS_CACHE_KEY'
        - name: 'PKPASS_CACHE_TOKEN_EXPIRY_DELTA'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/PKPASS_CACHE_TOKEN_EXPIRY_DELTA'
              name: 'PKPASS_CACHE_TOKEN_EXPIRY_DELTA'
        - name: 'PKPASS_SECRET_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/PKPASS_SECRET_KEY'
              name: 'PKPASS_SECRET_KEY'
        - name: 'VE_PKPASS_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/VE_PKPASS_API_KEY'
              name: 'VE_PKPASS_API_KEY'
        - name: 'RLS_PKPASS_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/RLS_PKPASS_API_KEY'
              name: 'RLS_PKPASS_API_KEY'
        - name: 'TR_PKPASS_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/TR_PKPASS_API_KEY'
              name: 'TR_PKPASS_API_KEY'
        - name: 'SMART_SOLUTIONS_API_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/SMART_SOLUTIONS_API_URL'
              name: 'SMART_SOLUTIONS_API_URL'
        - name: 'FIREARM_LICENSE_PASS_TEMPLATE_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FIREARM_LICENSE_PASS_TEMPLATE_ID'
              name: 'FIREARM_LICENSE_PASS_TEMPLATE_ID'
        - name: 'DISABILITY_LICENSE_PASS_TEMPLATE_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DISABILITY_LICENSE_PASS_TEMPLATE_ID'
              name: 'DISABILITY_LICENSE_PASS_TEMPLATE_ID'
        - name: 'MACHINE_LICENSE_PASS_TEMPLATE_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/MACHINE_LICENSE_PASS_TEMPLATE_ID'
              name: 'MACHINE_LICENSE_PASS_TEMPLATE_ID'
        - name: 'ADR_LICENSE_PASS_TEMPLATE_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/ADR_LICENSE_PASS_TEMPLATE_ID'
              name: 'ADR_LICENSE_PASS_TEMPLATE_ID'
        - name: 'ISLYKILL_SERVICE_PASSPHRASE'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/ISLYKILL_SERVICE_PASSPHRASE'
              name: 'ISLYKILL_SERVICE_PASSPHRASE'
        - name: 'ISLYKILL_SERVICE_BASEPATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/ISLYKILL_SERVICE_BASEPATH'
              name: 'ISLYKILL_SERVICE_BASEPATH'
        - name: 'IDENTITY_SERVER_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/IDENTITY_SERVER_CLIENT_SECRET'
              name: 'IDENTITY_SERVER_CLIENT_SECRET'
        - name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FINANCIAL_STATEMENTS_INAO_CLIENT_ID'
              name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_ID'
        - name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FINANCIAL_STATEMENTS_INAO_CLIENT_SECRET'
              name: 'FINANCIAL_STATEMENTS_INAO_CLIENT_SECRET'
        - name: 'FISKISTOFA_ZENTER_EMAIL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_ZENTER_EMAIL'
              name: 'FISKISTOFA_ZENTER_EMAIL'
        - name: 'FISKISTOFA_ZENTER_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_ZENTER_PASSWORD'
              name: 'FISKISTOFA_ZENTER_PASSWORD'
        - name: 'FISKISTOFA_ZENTER_CLIENT_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_ZENTER_CLIENT_PASSWORD'
              name: 'FISKISTOFA_ZENTER_CLIENT_PASSWORD'
        - name: 'FISKISTOFA_API_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_API_URL'
              name: 'FISKISTOFA_API_URL'
        - name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_API_ACCESS_TOKEN_SERVICE_CLIENT_SECRET'
              name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_CLIENT_SECRET'
        - name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_API_ACCESS_TOKEN_SERVICE_URL'
              name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_URL'
        - name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_CLIENT_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_API_ACCESS_TOKEN_SERVICE_CLIENT_ID'
              name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_CLIENT_ID'
        - name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_AUDIENCE'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_API_ACCESS_TOKEN_SERVICE_AUDIENCE'
              name: 'FISKISTOFA_API_ACCESS_TOKEN_SERVICE_AUDIENCE'
        - name: 'FISKISTOFA_POWERBI_CLIENT_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_POWERBI_CLIENT_ID'
              name: 'FISKISTOFA_POWERBI_CLIENT_ID'
        - name: 'FISKISTOFA_POWERBI_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_POWERBI_CLIENT_SECRET'
              name: 'FISKISTOFA_POWERBI_CLIENT_SECRET'
        - name: 'FISKISTOFA_POWERBI_TENANT_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/FISKISTOFA_POWERBI_TENANT_ID'
              name: 'FISKISTOFA_POWERBI_TENANT_ID'
        - name: 'XROAD_HEALTH_INSURANCE_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/health-insurance/XROAD-USER'
              name: 'XROAD_HEALTH_INSURANCE_USERNAME'
        - name: 'XROAD_HEALTH_INSURANCE_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/health-insurance/XROAD-PASSWORD'
              name: 'XROAD_HEALTH_INSURANCE_PASSWORD'
        - name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/HEALTH_INSURANCE_V2_XROAD_USERNAME'
              name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_USERNAME'
        - name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/HEALTH_INSURANCE_V2_XROAD_PASSWORD'
              name: 'XROAD_HEALTH_INSURANCE_V2_XROAD_PASSWORD'
        - name: 'XROAD_VMST_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/vmst-client/VMST_API_KEY'
              name: 'XROAD_VMST_API_KEY'
        - name: 'XROAD_DRIVING_LICENSE_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DRIVING_LICENSE_SECRET'
              name: 'XROAD_DRIVING_LICENSE_SECRET'
        - name: 'XROAD_PAYMENT_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/PAYMENT_USER'
              name: 'XROAD_PAYMENT_USER'
        - name: 'XROAD_PAYMENT_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/PAYMENT_PASSWORD'
              name: 'XROAD_PAYMENT_PASSWORD'
        - name: 'XROAD_PROPERTIES_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/xroad/client/NATIONAL-REGISTRY/IDENTITYSERVER_SECRET'
              name: 'XROAD_PROPERTIES_CLIENT_SECRET'
        - name: 'DRIVING_LICENSE_BOOK_XROAD_PATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DRIVING_LICENSE_BOOK_XROAD_PATH'
              name: 'DRIVING_LICENSE_BOOK_XROAD_PATH'
        - name: 'DRIVING_LICENSE_BOOK_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DRIVING_LICENSE_BOOK_USERNAME'
              name: 'DRIVING_LICENSE_BOOK_USERNAME'
        - name: 'DRIVING_LICENSE_BOOK_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/DRIVING_LICENSE_BOOK_PASSWORD'
              name: 'DRIVING_LICENSE_BOOK_PASSWORD'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/api'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'api'
      readinessProbe:
        httpGet:
          path: '/health'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '800m'
          memory: '2048Mi'
        requests:
          cpu: '200m'
          memory: '1024Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
      volumeMounts:
        - mountPath: '/etc/config/islyklar.p12'
          name: 'islyklar.p12'
    replicas: 10
    serviceAccountName: 'api'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'api'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/api'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'web'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/web'
metadata:
  name: 'web'
  namespace: 'islandis'
spec:
  spec:
    containers:
      env:
        - name: 'API_URL'
          value: 'http://web-api'
        - name: 'TRACKING_DOMAIN'
          value: 'beta.dev01.devland.is'
        - name: 'DISABLE_API_CATALOGUE'
          value: 'false'
        - name: 'DISABLE_SYSLUMENN_PAGE'
          value: 'false'
        - name: 'DISABLE_ORGANIZATION_CHATBOT'
          value: 'false'
        - name: 'ENVIRONMENT'
          value: 'dev'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'DD_RUM_APPLICATION_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_APPLICATION_ID'
              name: 'DD_RUM_APPLICATION_ID'
        - name: 'DD_RUM_CLIENT_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_CLIENT_TOKEN'
              name: 'DD_RUM_CLIENT_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/web'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'web'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '200m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    replicas: 10
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/web.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'web'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/web'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'search-indexer-service'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-search-indexer'
metadata:
  name: 'search-indexer-service'
  namespace: 'search-indexer'
spec:
  spec:
    containers:
      env:
        - name: 'APPLICATION_URL'
          value: 'http://search-indexer-service'
        - name: 'ELASTIC_NODE'
          value: 'https://vpc-search-njkekqydiegezhr4vqpkfnw5la.eu-west-1.es.amazonaws.com'
        - name: 'ELASTIC_INDEX'
          value: 'island-is'
        - name: 'CONTENTFUL_SPACE'
          value: '8k0h54kbe6bj'
        - name: 'CONTENTFUL_ENVIRONMENT'
          value: 'master'
        - name: 'CONTENTFUL_HOST'
          value: 'preview.contentful.com'
        - name: 'CONTENTFUL_ENTRY_FETCH_CHUNK_SIZE'
          value: '20'
        - name: 'AIR_DISCOUNT_SCHEME_FRONTEND_HOSTNAME'
          value: 'loftbru.dev01.devland.is'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'CONTENTFUL_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/search-indexer/CONTENTFUL_ACCESS_TOKEN'
              name: 'CONTENTFUL_ACCESS_TOKEN'
        - name: 'API_CMS_SYNC_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/search-indexer/API_CMS_SYNC_TOKEN'
              name: 'API_CMS_SYNC_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-search-indexer'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'search-indexer-service'
      readinessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '2048Mi'
        requests:
          cpu: '100m'
          memory: '512Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    initContainers:
      - args:
          - '/webapp/migrateAws.js'
        command:
          - '/usr/local/bin/node'
        env:
          - name: 'APPLICATION_URL'
            value: 'http://search-indexer-service'
          - name: 'ELASTIC_NODE'
            value: 'https://vpc-search-njkekqydiegezhr4vqpkfnw5la.eu-west-1.es.amazonaws.com'
          - name: 'ELASTIC_INDEX'
            value: 'island-is'
          - name: 'CONTENTFUL_SPACE'
            value: '8k0h54kbe6bj'
          - name: 'CONTENTFUL_ENVIRONMENT'
            value: 'master'
          - name: 'CONTENTFUL_HOST'
            value: 'preview.contentful.com'
          - name: 'CONTENTFUL_ENTRY_FETCH_CHUNK_SIZE'
            value: '20'
          - name: 'AIR_DISCOUNT_SCHEME_FRONTEND_HOSTNAME'
            value: 'loftbru.dev01.devland.is'
          - name: 'S3_BUCKET'
            value: 'dev-es-custom-packages'
          - name: 'ELASTIC_DOMAIN'
            value: 'search'
          - name: 'CONTENTFUL_ACCESS_TOKEN'
            valueFrom:
              secretKeyRef:
                key: '/k8s/search-indexer/CONTENTFUL_ACCESS_TOKEN'
                name: 'CONTENTFUL_ACCESS_TOKEN'
        image: ''
        name: 'migrate-aws'
      - args:
          - '/webapp/migrateElastic.js'
        command:
          - '/usr/local/bin/node'
        env:
          - name: 'APPLICATION_URL'
            value: 'http://search-indexer-service'
          - name: 'ELASTIC_NODE'
            value: 'https://vpc-search-njkekqydiegezhr4vqpkfnw5la.eu-west-1.es.amazonaws.com'
          - name: 'ELASTIC_INDEX'
            value: 'island-is'
          - name: 'CONTENTFUL_SPACE'
            value: '8k0h54kbe6bj'
          - name: 'CONTENTFUL_ENVIRONMENT'
            value: 'master'
          - name: 'CONTENTFUL_HOST'
            value: 'preview.contentful.com'
          - name: 'CONTENTFUL_ENTRY_FETCH_CHUNK_SIZE'
            value: '20'
          - name: 'AIR_DISCOUNT_SCHEME_FRONTEND_HOSTNAME'
            value: 'loftbru.dev01.devland.is'
          - name: 'S3_BUCKET'
            value: 'dev-es-custom-packages'
          - name: 'ELASTIC_DOMAIN'
            value: 'search'
          - name: 'CONTENTFUL_ACCESS_TOKEN'
            valueFrom:
              secretKeyRef:
                key: '/k8s/search-indexer/CONTENTFUL_ACCESS_TOKEN'
                name: 'CONTENTFUL_ACCESS_TOKEN'
        image: ''
        name: 'migrate-elastic'
      - args:
          - '/webapp/migrateKibana.js'
        command:
          - '/usr/local/bin/node'
        env:
          - name: 'APPLICATION_URL'
            value: 'http://search-indexer-service'
          - name: 'ELASTIC_NODE'
            value: 'https://vpc-search-njkekqydiegezhr4vqpkfnw5la.eu-west-1.es.amazonaws.com'
          - name: 'ELASTIC_INDEX'
            value: 'island-is'
          - name: 'CONTENTFUL_SPACE'
            value: '8k0h54kbe6bj'
          - name: 'CONTENTFUL_ENVIRONMENT'
            value: 'master'
          - name: 'CONTENTFUL_HOST'
            value: 'preview.contentful.com'
          - name: 'CONTENTFUL_ENTRY_FETCH_CHUNK_SIZE'
            value: '20'
          - name: 'AIR_DISCOUNT_SCHEME_FRONTEND_HOSTNAME'
            value: 'loftbru.dev01.devland.is'
          - name: 'S3_BUCKET'
            value: 'dev-es-custom-packages'
          - name: 'ELASTIC_DOMAIN'
            value: 'search'
          - name: 'CONTENTFUL_ACCESS_TOKEN'
            valueFrom:
              secretKeyRef:
                key: '/k8s/search-indexer/CONTENTFUL_ACCESS_TOKEN'
                name: 'CONTENTFUL_ACCESS_TOKEN'
        image: ''
        name: 'migrate-kibana'
    replicas: 1
    serviceAccountName: 'search-indexer'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/search-indexer-service.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'search-indexer-service'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-search-indexer'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'xroad-collector'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-xroad-collector'
metadata:
  name: 'xroad-collector'
  namespace: 'xroad-collector'
spec:
  spec:
    containers:
      args:
        - '--no-experimental-fetch'
        - 'main.js'
      command:
        - 'node'
      env:
        - name: 'NODE_TLS_REJECT_UNAUTHORIZED'
          value: '0'
        - name: 'ELASTIC_NODE'
          value: 'https://vpc-search-njkekqydiegezhr4vqpkfnw5la.eu-west-1.es.amazonaws.com'
        - name: 'XROAD_BASE_PATH'
          value: 'http://securityserver.dev01.devland.is'
        - name: 'XROAD_BASE_PATH_WITH_ENV'
          value: 'http://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_TLS_BASE_PATH'
          value: 'https://securityserver.dev01.devland.is'
        - name: 'XROAD_TLS_BASE_PATH_WITH_ENV'
          value: 'https://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_CLIENT_ID'
          value: 'IS-DEV/GOV/10000/island-is-client'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-xroad-collector'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'xroad-collector'
      readinessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    serviceAccountName: 'xroad-collector'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/xroad-collector.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'xroad-collector'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-xroad-collector'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'skilavottord-web'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/skilavottord-web'
metadata:
  name: 'skilavottord-web'
  namespace: 'skilavottord'
spec:
  spec:
    containers:
      env:
        - name: 'API_URL'
          value: 'http://web-skilavottord-ws'
        - name: 'ENVIRONMENT'
          value: 'dev'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'IDENTITY_SERVER_DOMAIN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/web/IDENTITY_SERVER_DOMAIN'
              name: 'IDENTITY_SERVER_DOMAIN'
        - name: 'SKILAVOTTORD_WEB_IDS_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/web/IDENTITY_SERVER_CLIENT_SECRET'
              name: 'SKILAVOTTORD_WEB_IDS_CLIENT_SECRET'
        - name: 'IDENTITY_SERVER_LOGOUT_REDIRECT_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/web/IDENTITY_SERVER_LOGOUT_REDIRECT_URL'
              name: 'IDENTITY_SERVER_LOGOUT_REDIRECT_URL'
        - name: 'NEXTAUTH_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/web/NEXTAUTH_URL'
              name: 'NEXTAUTH_URL'
        - name: 'DD_RUM_APPLICATION_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_APPLICATION_ID'
              name: 'DD_RUM_APPLICATION_ID'
        - name: 'DD_RUM_CLIENT_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_CLIENT_TOKEN'
              name: 'DD_RUM_CLIENT_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/skilavottord-web'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'skilavottord-web'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/skilavottord-web.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'skilavottord-web'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/skilavottord-web'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'skilavottord-ws'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/skilavottord-ws'
metadata:
  name: 'skilavottord-ws'
  namespace: 'skilavottord'
spec:
  spec:
    containers:
      env:
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'SAMGONGUSTOFA_SOAP_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord-ws/SAMGONGUSTOFA_SOAP_URL'
              name: 'SAMGONGUSTOFA_SOAP_URL'
        - name: 'SAMGONGUSTOFA_REST_AUTH_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord-ws/SAMGONGUSTOFA_REST_AUTH_URL'
              name: 'SAMGONGUSTOFA_REST_AUTH_URL'
        - name: 'SAMGONGUSTOFA_REST_DEREG_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord-ws/SAMGONGUSTOFA_REST_DEREG_URL'
              name: 'SAMGONGUSTOFA_REST_DEREG_URL'
        - name: 'FJARSYSLA_REST_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord-ws/FJARSYSLA_REST_URL'
              name: 'FJARSYSLA_REST_URL'
        - name: 'SAMGONGUSTOFA_REST_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/SAMGONGUSTOFA_REST_PASS'
              name: 'SAMGONGUSTOFA_REST_PASS'
        - name: 'SAMGONGUSTOFA_SOAP_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/SAMGONGUSTOFA_SOAP_PASS'
              name: 'SAMGONGUSTOFA_SOAP_PASS'
        - name: 'FJARSYSLA_REST_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/FJARSYSLA_REST_PASS'
              name: 'FJARSYSLA_REST_PASS'
        - name: 'SAMGONGUSTOFA_SOAP_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/SAMGONGUSTOFA_SOAP_USER'
              name: 'SAMGONGUSTOFA_SOAP_USER'
        - name: 'SAMGONGUSTOFA_REST_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/SAMGONGUSTOFA_REST_USER'
              name: 'SAMGONGUSTOFA_REST_USER'
        - name: 'FJARSYSLA_REST_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/FJARSYSLA_REST_USER'
              name: 'FJARSYSLA_REST_USER'
        - name: 'DB_USER'
          value: 'skilavottord'
        - name: 'DB_NAME'
          value: 'skilavottord'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/skilavottord/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/skilavottord-ws'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'skilavottord-ws'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    initContainers:
      - args:
          - 'sequelize-cli'
          - 'db:migrate'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'skilavottord'
          - name: 'DB_NAME'
            value: 'skilavottord'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/skilavottord/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/skilavottord-ws.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'skilavottord-ws'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/skilavottord-ws'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'services-documents'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-documents'
metadata:
  name: 'services-documents'
  namespace: 'services-documents'
spec:
  spec:
    containers:
      env:
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'DB_USER'
          value: 'services_documents'
        - name: 'DB_NAME'
          value: 'services_documents'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/services-documents/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-documents'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'services-documents'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    initContainers:
      - args:
          - 'sequelize-cli'
          - 'db:migrate'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'services_documents'
          - name: 'DB_NAME'
            value: 'services_documents'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/services-documents/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/services-documents.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'services-documents'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-documents'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'island-ui-storybook'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/island-ui-storybook'
metadata:
  name: 'island-ui-storybook'
  namespace: 'storybook'
spec:
  spec:
    containers:
      env:
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/island-ui-storybook'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'island-ui-storybook'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/island-ui-storybook.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'island-ui-storybook'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/island-ui-storybook'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'contentful-translation-extension'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/contentful-translation-extension'
metadata:
  name: 'contentful-translation-extension'
  namespace: 'contentful-translation-extension'
spec:
  spec:
    containers:
      env:
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/contentful-translation-extension'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'contentful-translation-extension'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/contentful-translation-extension.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'contentful-translation-extension'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/contentful-translation-extension'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'download-service'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/download-service'
metadata:
  name: 'download-service'
  namespace: 'download-service'
spec:
  spec:
    containers:
      env:
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'IDENTITY_SERVER_CLIENT_ID'
          value: '@island.is/clients/download-service'
        - name: 'XROAD_BASE_PATH'
          value: 'http://securityserver.dev01.devland.is'
        - name: 'XROAD_BASE_PATH_WITH_ENV'
          value: 'http://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_TLS_BASE_PATH'
          value: 'https://securityserver.dev01.devland.is'
        - name: 'XROAD_TLS_BASE_PATH_WITH_ENV'
          value: 'https://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_CLIENT_ID'
          value: 'IS-DEV/GOV/10000/island-is-client'
        - name: 'XROAD_FINANCES_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/financeIsland'
        - name: 'XROAD_VEHICLES_PATH'
          value: 'IS-DEV/GOV/10017/Samgongustofa-Protected/Mitt-Svaedi-V1'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'IDENTITY_SERVER_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/download-service/IDENTITY_SERVER_CLIENT_SECRET'
              name: 'IDENTITY_SERVER_CLIENT_SECRET'
        - name: 'POSTHOLF_CLIENTID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_CLIENTID'
              name: 'POSTHOLF_CLIENTID'
        - name: 'POSTHOLF_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_CLIENT_SECRET'
              name: 'POSTHOLF_CLIENT_SECRET'
        - name: 'POSTHOLF_TOKEN_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_TOKEN_URL'
              name: 'POSTHOLF_TOKEN_URL'
        - name: 'POSTHOLF_BASE_PATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/documents/POSTHOLF_BASE_PATH'
              name: 'POSTHOLF_BASE_PATH'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/download-service'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: 'download/v1/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'download-service'
      readinessProbe:
        httpGet:
          path: 'download/v1/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '200m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/download-service.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'download-service'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/download-service'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'icelandic-names-registry-backend'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/icelandic-names-registry-backend'
metadata:
  name: 'icelandic-names-registry-backend'
  namespace: 'icelandic-names-registry'
spec:
  spec:
    containers:
      env:
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'DB_USER'
          value: 'icelandic_names_registry_backend'
        - name: 'DB_NAME'
          value: 'icelandic_names_registry_backend'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/icelandic-names-registry-backend/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/icelandic-names-registry-backend'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'icelandic-names-registry-backend'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    initContainers:
      - args:
          - 'sequelize-cli'
          - 'db:migrate'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'icelandic_names_registry_backend'
          - name: 'DB_NAME'
            value: 'icelandic_names_registry_backend'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/icelandic-names-registry-backend/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
        name: 'migrations'
      - args:
          - 'sequelize-cli'
          - 'db:seed:all'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'icelandic_names_registry_backend'
          - name: 'DB_NAME'
            value: 'icelandic_names_registry_backend'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/icelandic-names-registry-backend/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
        name: 'seeds'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/icelandic-names-registry-backend.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'icelandic-names-registry-backend'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/icelandic-names-registry-backend'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'endorsement-system-api'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-endorsements-api'
metadata:
  name: 'endorsement-system-api'
  namespace: 'endorsement-system'
spec:
  spec:
    containers:
      args:
        - '--tls-min-v1.0'
        - '--no-experimental-fetch'
        - 'main.js'
      command:
        - 'node'
      env:
        - name: 'EMAIL_REGION'
          value: 'eu-west-1'
        - name: 'EMAIL_FROM_NAME'
          value: 'devland.is'
        - name: 'EMAIL_FROM_ADDRESS'
          value: 'development@island.is'
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'SOFFIA_HOST_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/endorsement-system-api/SOFFIA_HOST_URL'
              name: 'SOFFIA_HOST_URL'
        - name: 'SOFFIA_SOAP_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/endorsement-system-api/SOFFIA_SOAP_URL'
              name: 'SOFFIA_SOAP_URL'
        - name: 'SOFFIA_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/SOFFIA_USER'
              name: 'SOFFIA_USER'
        - name: 'SOFFIA_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/SOFFIA_PASS'
              name: 'SOFFIA_PASS'
        - name: 'DB_USER'
          value: 'services_endorsements_api'
        - name: 'DB_NAME'
          value: 'services_endorsements_api'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/services-endorsements-api/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-endorsements-api'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'endorsement-system-api'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    initContainers:
      - args:
          - 'sequelize-cli'
          - 'db:migrate'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'services_endorsements_api'
          - name: 'DB_NAME'
            value: 'services_endorsements_api'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/services-endorsements-api/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
        name: 'migrations'
    serviceAccountName: 'endorsement-system-api'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/endorsement-system-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'endorsement-system-api'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-endorsements-api'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'air-discount-scheme-web'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-web'
metadata:
  name: 'air-discount-scheme-web'
  namespace: 'air-discount-scheme'
spec:
  spec:
    containers:
      env:
        - name: 'API_URL'
          value: 'http://web-air-discount-scheme-api'
        - name: 'IDENTITY_SERVER_ISSUER_DOMAIN'
          value: 'identity-server.dev01.devland.is'
        - name: 'NEXTAUTH_URL'
          value: 'https://loftbru.dev01.devland.is'
        - name: 'ENVIRONMENT'
          value: 'dev'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'DD_RUM_APPLICATION_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_APPLICATION_ID'
              name: 'DD_RUM_APPLICATION_ID'
        - name: 'DD_RUM_CLIENT_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/DD_RUM_CLIENT_TOKEN'
              name: 'DD_RUM_CLIENT_TOKEN'
        - name: 'IDENTITY_SERVER_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/web/IDENTITY_SERVER_SECRET'
              name: 'IDENTITY_SERVER_SECRET'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-web'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'air-discount-scheme-web'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/air-discount-scheme-web.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'air-discount-scheme-web'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-web'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'air-discount-scheme-backend'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-backend'
metadata:
  name: 'air-discount-scheme-backend'
  namespace: 'air-discount-scheme'
spec:
  spec:
    containers:
      env:
        - name: 'ENVIRONMENT'
          value: 'dev'
        - name: 'REDIS_URL_NODE_01'
          value: 'clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379'
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'IDENTITY_SERVER_CLIENT_ID'
          value: '@vegagerdin.is/clients/air-discount-scheme'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'XROAD_BASE_PATH'
          value: 'http://securityserver.dev01.devland.is'
        - name: 'XROAD_BASE_PATH_WITH_ENV'
          value: 'http://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_TLS_BASE_PATH'
          value: 'https://securityserver.dev01.devland.is'
        - name: 'XROAD_TLS_BASE_PATH_WITH_ENV'
          value: 'https://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_CLIENT_ID'
          value: 'IS-DEV/GOV/10000/island-is-client'
        - name: 'XROAD_NATIONAL_REGISTRY_SERVICE_PATH'
          value: 'IS-DEV/GOV/10001/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_NATIONAL_REGISTRY_REDIS_NODES'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'XROAD_TJODSKRA_API_PATH'
          value: '/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_TJODSKRA_MEMBER_CODE'
          value: '10001'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'ICELANDAIR_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/backend/ICELANDAIR_API_KEY'
              name: 'ICELANDAIR_API_KEY'
        - name: 'ERNIR_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/backend/ERNIR_API_KEY'
              name: 'ERNIR_API_KEY'
        - name: 'NORLANDAIR_API_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/backend/NORLANDAIR_API_KEY'
              name: 'NORLANDAIR_API_KEY'
        - name: 'NATIONAL_REGISTRY_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/backend/NATIONAL_REGISTRY_PASSWORD'
              name: 'NATIONAL_REGISTRY_PASSWORD'
        - name: 'NATIONAL_REGISTRY_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/backend/NATIONAL_REGISTRY_USERNAME'
              name: 'NATIONAL_REGISTRY_USERNAME'
        - name: 'NATIONAL_REGISTRY_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/backend/NATIONAL_REGISTRY_URL'
              name: 'NATIONAL_REGISTRY_URL'
        - name: 'IDENTITY_SERVER_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme-backend/VEGAGERDIN_IDS_CLIENTS_ADS_SECRET'
              name: 'IDENTITY_SERVER_CLIENT_SECRET'
        - name: 'DB_USER'
          value: 'air_discount_scheme_backend'
        - name: 'DB_NAME'
          value: 'air_discount_scheme_backend'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/backend/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-backend'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'air-discount-scheme-backend'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '200m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
    initContainers:
      - args:
          - 'sequelize-cli'
          - 'db:migrate'
        command:
          - 'npx'
        env:
          - name: 'NO_UPDATE_NOTIFIER'
            value: 'true'
          - name: 'DB_USER'
            value: 'air_discount_scheme_backend'
          - name: 'DB_NAME'
            value: 'air_discount_scheme_backend'
          - name: 'DB_HOST'
            value: 'postgres-applications.internal'
          - name: 'DB_REPLICAS_HOST'
            value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
          - name: 'DB_PASS'
            valueFrom:
              secretKeyRef:
                key: '/k8s/air-discount-scheme/backend/DB_PASSWORD'
                name: 'DB_PASS'
        image: ''
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/air-discount-scheme-backend.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'air-discount-scheme-backend'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-backend'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'air-discount-scheme-api'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-api'
metadata:
  name: 'air-discount-scheme-api'
  namespace: 'air-discount-scheme'
spec:
  spec:
    containers:
      env:
        - name: 'AUTH_AUDIENCE'
          value: 'loftbru.dev01.devland.is'
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'ELASTIC_NODE'
          value: 'https://vpc-search-njkekqydiegezhr4vqpkfnw5la.eu-west-1.es.amazonaws.com'
        - name: 'BACKEND_URL'
          value: 'http://web-air-discount-scheme-backend'
        - name: 'CONTENTFUL_HOST'
          value: 'preview.contentful.com'
        - name: 'NO_UPDATE_NOTIFIER'
          value: 'true'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'AUTH_JWT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/api/AUTH_JWT_SECRET'
              name: 'AUTH_JWT_SECRET'
        - name: 'CONTENTFUL_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/api/CONTENTFUL_ACCESS_TOKEN'
              name: 'CONTENTFUL_ACCESS_TOKEN'
        - name: 'DEVELOPERS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/api/DEVELOPERS'
              name: 'DEVELOPERS'
        - name: 'ADMINS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/air-discount-scheme/api/ADMINS'
              name: 'ADMINS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-api'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'air-discount-scheme-api'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '200m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    serviceAccountName: 'air-discount-scheme-api'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/air-discount-scheme-api.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'air-discount-scheme-api'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/air-discount-scheme-api'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'github-actions-cache'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/github-actions-cache'
metadata:
  name: 'github-actions-cache'
  namespace: 'github-actions-cache'
spec:
  spec:
    containers:
      args:
        - '--tls-min-v1.0'
        - '--no-experimental-fetch'
        - 'main.js'
      command:
        - 'node'
      env:
        - name: 'REDIS_NODES'
          value: 'clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/github-actions-cache'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'github-actions-cache'
      readinessProbe:
        httpGet:
          path: '/health'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '400m'
          memory: '512Mi'
        requests:
          cpu: '100m'
          memory: '256Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    replicas: 5
    serviceAccountName: 'github-actions-cache'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/github-actions-cache.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'github-actions-cache'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/github-actions-cache'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'user-notification'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-notification'
metadata:
  name: 'user-notification'
  namespace: 'user-notification'
spec:
  spec:
    containers:
      args:
        - '--no-experimental-fetch'
        - 'main.js'
      command:
        - 'node'
      env:
        - name: 'MAIN_QUEUE_NAME'
          value: 'user-notification'
        - name: 'DEAD_LETTER_QUEUE_NAME'
          value: 'user-notification-failure'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'FIREBASE_CREDENTIALS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/user-notification/firestore-credentials'
              name: 'FIREBASE_CREDENTIALS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-notification'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'user-notification'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    serviceAccountName: 'user-notification'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/user-notification.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'user-notification'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-notification'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'user-notification-worker'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-notification'
metadata:
  name: 'user-notification-worker'
  namespace: 'user-notification'
spec:
  spec:
    containers:
      args:
        - '--no-experimental-fetch'
        - 'main.js'
        - '--job=worker'
      command:
        - 'node'
      env:
        - name: 'MAIN_QUEUE_NAME'
          value: 'user-notification'
        - name: 'DEAD_LETTER_QUEUE_NAME'
          value: 'user-notification-failure'
        - name: 'IDENTITY_SERVER_PATH'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'SERVICE_USER_PROFILE_BASEPATH'
          value: 'http://web-service-portal-api.service-portal.svc.cluster.local'
        - name: 'USER_NOTIFICATION_APP_PROTOCOL'
          value: 'is.island.app.dev'
        - name: 'CONTENTFUL_HOST'
          value: 'preview.contentful.com'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'FIREBASE_CREDENTIALS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/user-notification/firestore-credentials'
              name: 'FIREBASE_CREDENTIALS'
        - name: 'USER_NOTIFICATION_CLIENT_ID'
          valueFrom:
            secretKeyRef:
              key: '/k8s/user-notification/USER_NOTIFICATION_CLIENT_ID'
              name: 'USER_NOTIFICATION_CLIENT_ID'
        - name: 'USER_NOTIFICATION_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/user-notification/USER_NOTIFICATION_CLIENT_SECRET'
              name: 'USER_NOTIFICATION_CLIENT_SECRET'
        - name: 'CONTENTFUL_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/user-notification/CONTENTFUL_ACCESS_TOKEN'
              name: 'CONTENTFUL_ACCESS_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-notification'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'user-notification-worker'
      readinessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    serviceAccountName: 'user-notification-worker'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/user-notification-worker.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'user-notification-worker'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-user-notification'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'external-contracts-tests'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/external-contracts-tests'
metadata:
  name: 'external-contracts-tests'
  namespace: 'external-contracts-tests'
spec:
  spec:
    containers:
      env:
        - name: 'XROAD_BASE_PATH'
          value: 'http://securityserver.dev01.devland.is'
        - name: 'XROAD_BASE_PATH_WITH_ENV'
          value: 'http://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_TLS_BASE_PATH'
          value: 'https://securityserver.dev01.devland.is'
        - name: 'XROAD_TLS_BASE_PATH_WITH_ENV'
          value: 'https://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_NATIONAL_REGISTRY_SERVICE_PATH'
          value: 'IS-DEV/GOV/10001/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_NATIONAL_REGISTRY_REDIS_NODES'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'XROAD_TJODSKRA_API_PATH'
          value: '/SKRA-Protected/Einstaklingar-v1'
        - name: 'XROAD_TJODSKRA_MEMBER_CODE'
          value: '10001'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'SOFFIA_SOAP_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/SOFFIA_SOAP_URL'
              name: 'SOFFIA_SOAP_URL'
        - name: 'SOFFIA_HOST_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/api/SOFFIA_HOST_URL'
              name: 'SOFFIA_HOST_URL'
        - name: 'SOFFIA_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/SOFFIA_USER'
              name: 'SOFFIA_USER'
        - name: 'SOFFIA_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/service-portal/SOFFIA_PASS'
              name: 'SOFFIA_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/external-contracts-tests'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'external-contracts-tests'
      readinessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '1'
          memory: '1024Mi'
        requests:
          cpu: '500m'
          memory: '512Mi'
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/external-contracts-tests.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'external-contracts-tests'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/external-contracts-tests'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'application-system-api-worker'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-api'
metadata:
  name: 'application-system-api-worker'
  namespace: 'application-system'
spec:
  spec:
    containers:
      args:
        - 'main.js'
        - '--job'
        - 'worker'
      command:
        - 'node'
      env:
        - name: 'IDENTITY_SERVER_CLIENT_ID'
          value: '@island.is/clients/application-system'
        - name: 'IDENTITY_SERVER_ISSUER_URL'
          value: 'https://identity-server.dev01.devland.is'
        - name: 'REDIS_URL_NODE_01'
          value: '["clustercfg.general-redis-cluster-group.5fzau3.euw1.cache.amazonaws.com:6379"]'
        - name: 'XROAD_CHARGE_FJS_V2_PATH'
          value: 'IS-DEV/GOV/10021/FJS-Public/chargeFJS_v2'
        - name: 'APPLICATION_ATTACHMENT_BUCKET'
          value: 'island-is-dev-storage-application-system'
        - name: 'FILE_SERVICE_PRESIGN_BUCKET'
          value: 'island-is-dev-fs-presign-bucket'
        - name: 'FILE_STORAGE_UPLOAD_BUCKET'
          value: 'island-is-dev-upload-api'
        - name: 'CLIENT_LOCATION_ORIGIN'
          value: 'https://beta.dev01.devland.is/umsoknir'
        - name: 'XROAD_BASE_PATH'
          value: 'http://securityserver.dev01.devland.is'
        - name: 'XROAD_BASE_PATH_WITH_ENV'
          value: 'http://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_TLS_BASE_PATH'
          value: 'https://securityserver.dev01.devland.is'
        - name: 'XROAD_TLS_BASE_PATH_WITH_ENV'
          value: 'https://securityserver.dev01.devland.is/r1/IS-DEV'
        - name: 'XROAD_CLIENT_ID'
          value: 'IS-DEV/GOV/10000/island-is-client'
        - name: 'XROAD_PAYMENT_PROVIDER_ID'
          value: 'IS-DEV/GOV/10021/FJS-Public'
        - name: 'XROAD_PAYMENT_BASE_CALLBACK_URL'
          value: 'XROAD:/IS-DEV/GOV/10000/island-is/application-payment-v1/'
        - name: 'XROAD_PAYMENT_ADDITION_CALLBACK_URL'
          value: '/'
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'IDENTITY_SERVER_CLIENT_SECRET'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/IDENTITY_SERVER_CLIENT_SECRET'
              name: 'IDENTITY_SERVER_CLIENT_SECRET'
        - name: 'SYSLUMENN_HOST'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/SYSLUMENN_HOST'
              name: 'SYSLUMENN_HOST'
        - name: 'SYSLUMENN_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/SYSLUMENN_USERNAME'
              name: 'SYSLUMENN_USERNAME'
        - name: 'SYSLUMENN_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/SYSLUMENN_PASSWORD'
              name: 'SYSLUMENN_PASSWORD'
        - name: 'DRIVING_LICENSE_BOOK_XROAD_PATH'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DRIVING_LICENSE_BOOK_XROAD_PATH'
              name: 'DRIVING_LICENSE_BOOK_XROAD_PATH'
        - name: 'DRIVING_LICENSE_BOOK_USERNAME'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DRIVING_LICENSE_BOOK_USERNAME'
              name: 'DRIVING_LICENSE_BOOK_USERNAME'
        - name: 'DRIVING_LICENSE_BOOK_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DRIVING_LICENSE_BOOK_PASSWORD'
              name: 'DRIVING_LICENSE_BOOK_PASSWORD'
        - name: 'DOKOBIT_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/DOKOBIT_ACCESS_TOKEN'
              name: 'DOKOBIT_ACCESS_TOKEN'
        - name: 'DOKOBIT_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/DOKOBIT_URL'
              name: 'DOKOBIT_URL'
        - name: 'ARK_BASE_URL'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/ARK_BASE_URL'
              name: 'ARK_BASE_URL'
        - name: 'XROAD_PAYMENT_USER'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/PAYMENT_USER'
              name: 'XROAD_PAYMENT_USER'
        - name: 'XROAD_PAYMENT_PASSWORD'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system-api/PAYMENT_PASSWORD'
              name: 'XROAD_PAYMENT_PASSWORD'
        - name: 'DB_USER'
          value: 'application_system_api'
        - name: 'DB_NAME'
          value: 'application_system_api'
        - name: 'DB_HOST'
          value: 'postgres-applications.internal'
        - name: 'DB_REPLICAS_HOST'
          value: 'dev-vidspyrna-aurora.cluster-ro-c6cxecmrvlpq.eu-west-1.rds.amazonaws.com'
        - name: 'DB_PASS'
          valueFrom:
            secretKeyRef:
              key: '/k8s/application-system/api/DB_PASSWORD'
              name: 'DB_PASS'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-api'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'application-system-api-worker'
      readinessProbe:
        httpGet:
          path: '/'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    serviceAccountName: 'application-system-api-worker'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/application-system-api-worker.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'application-system-api-worker'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/application-system-api'
---
apiVersion: 'apps/v1'
kind: 'Deployment'
labels:
  tags.datadoghq.com/env: 'dev'
  tags.datadoghq.com/service: 'contentful-entry-tagger-service'
  tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-contentful-entry-tagger'
metadata:
  name: 'contentful-entry-tagger-service'
  namespace: 'contentful-entry-tagger'
spec:
  spec:
    containers:
      env:
        - name: 'CONFIGCAT_SDK_KEY'
          valueFrom:
            secretKeyRef:
              key: '/k8s/configcat/CONFIGCAT_SDK_KEY'
              name: 'CONFIGCAT_SDK_KEY'
        - name: 'CONTENTFUL_MANAGEMENT_ACCESS_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/contentful-entry-tagger/CONTENTFUL_MANAGEMENT_ACCESS_TOKEN'
              name: 'CONTENTFUL_MANAGEMENT_ACCESS_TOKEN'
        - name: 'CONTENTFUL_REQUEST_TOKEN'
          valueFrom:
            secretKeyRef:
              key: '/k8s/contentful-entry-tagger/CONTENTFUL_REQUEST_TOKEN'
              name: 'CONTENTFUL_REQUEST_TOKEN'
      image: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-contentful-entry-tagger'
      imagePullPolicy: 'IfNotPresent'
      livenessProbe:
        httpGet:
          path: '/liveness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      name: 'contentful-entry-tagger-service'
      readinessProbe:
        httpGet:
          path: '/readiness'
        initialDelaySeconds: 3
        timeoutSeconds: 3
      resources:
        limits:
          cpu: '200m'
          memory: '256Mi'
        requests:
          cpu: '100m'
          memory: '128Mi'
      securityContext:
        allowPrivilegeEscalation: false
        fsGroup: 65534
        privileged: false
    serviceAccountName: 'contentful-entry-tagger'
  strategy:
    rollingUpdate:
      maxSurge: '25%'
      maxUnavailable: '25%'
    type: 'RollingUpdate'
  template:
    metadata:
      annotations:
        ad.datadoghq.com/contentful-entry-tagger-service.logs: "[{\n              \"log_processing_rules\": [{\n                \"type\": \"mask_sequences\", \n                \"name\": \"mask_national_ids\", \n                \"replace_placeholder\": \"--MASKED--\", \n                \"pattern\" : \"\\b(?:[89]\\d{3}|(?:[012]\\d|3[01])(?:0\\d|1[012]))\\d\\d-?\\d{4}\\b\"\n              }]\n            }]"
      labels:
        tags.datadoghq.com/env: 'dev'
        tags.datadoghq.com/service: 'contentful-entry-tagger-service'
        tags.datadoghq.com/version: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/services-contentful-entry-tagger'
---